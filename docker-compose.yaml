
services:
  app:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    image: laravel-app
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./laravel:/var/www
      - ./laravel/docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel

  webserver:
    image: nginx:alpine
    container_name: laravel-webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./laravel:/var/www
      - ./laravel/docker/nginx/conf.d:/etc/nginx/conf.d

    networks:
      - laravel
  node-service:
    build:
      context: ./node-service
      dockerfile: Dockerfile
    container_name: node-service
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./node-service:/usr/src/app
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7
    container_name: laravel-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      #MYSQL_USER: root
      #MYSQL_PASSWORD: root
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - 8080:80
    networks:
      - laravel

  # mailhog:
  #   image: mailhog/mailhog
  #   container_name: mailhog
  #   restart: unless-stopped
  #   ports:
  #     - 1025:1025
  #     - 8025:8025
  #   networks:
  #     - laravel
networks:
  laravel:
    driver: bridge

volumes:
  mysql-data:
    driver: local
